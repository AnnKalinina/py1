#!/usr/bin/env python
# coding: utf-8

'''
Все программы на питоне делают ровно две вещи:
 1. Создают объекты
 2. Манипулируют этими объектами

Объкты могут иметь разную природу, как например число "42",
строка "привет!", открытый файл "Волочкова.jpg" и т.д.

Для тех кто знаком с Си, объект в питоне - это структура данных
описывающая некий участок(выделенный в куче(heap))
оперативной памяти, принадлежащей процессу.
'''

print None

print True

print False

print 42
print 42.
print 42.0
print .42
print 0.42
print 0x2a
print 0o52
print 0b101010
print 1+1j

'''
Любая программа на питоне состоит из следующих частей:
 - Как минимум один модуль (значение спец. переменной __name__, всегда принимает
   значение имени файла с кодом.
   Например: программа program_template.py содержит один модуль:
   "program_template")

 - Модуль состоит из конструкций (statement). Модуль может быть пустым.
   Например:
     if __name__ == "__main__":
         main()
   НЕ ПУТАТЬ С ВЫРАЖЕНИЕМ (expression) !

 - Конструкция состоит из состоит из выражений:
   Например:
     "42" - это выражение создающее объект - число 42.
     "print 42" - это выражение печатающее в стандартный вывод число 42.

! Выражение - это неделимая единица языка, именно они создают и манипулируют
! объектами. Всё остальное - это "объвязка".

'''

print __name__


'''
__имя__ - это спец. переменные. "магические переменные"
'''

'''
Python очень похож на Java. Как и Java, Python - это язык с виртуальной
машиной.
В Java - это JVM. В Python - это PVM.

PVM - это сильно упрощенный вариант JVM.
Основное упрощение - отсутствие статической типизации (как в JavaScript).

Пример:
Функция main на Java:

public static void main(String[] args) throws Exception {
    ...
}

Функция на Python:

def main(args):
    ...

Функция на JavaScript:

function main(args) {
    ...
}

Отсутствие статической типизации, позволили слить фазы компиляции и выполнения
в одну - интерпретация.

В результате интерпретации получается байткод который сразу выполняется.
Резульатом выполнения байткода является новый объект и/или манипуляуии над
уже существующим объектом.
'''

print None # пустое значение
print True, False # Булевский тип
# Встроенные типы данных
from decimal import Decimal
from fractions import Fraction
print 1, 3.1451, 3+4j, Decimal(1), Fraction(3,4), int("1") # Числа
print 'spam', "guido", u"ололо", str(1) # Строки
print [1, [2, 4, "hello"], 4], list("abc") # Списки
print {'food': 'spam', 'taste': 'yum'}, dict(a=1) # Словари
print (1,2,3,'hello') # Картежи (tuple)
print open('datatypes.py') # Файлы
print set('aabbcc') # Множества

'''
Встроенные функции, живут в модуле __builtin__
'''

print len('abc')
print hex(10)
print oct(10)
print bin(10)
